// aria roles https://www.w3.org/TR/wai-aria-1.2/#role_definitions

const ARIA_ROLES = {
  alert: "alert", // ✅
  alertdialog: "alertdialog", // ✅
  application: "application",
  article: "article",
  banner: "banner",
  blockquote: "blockquote",
  button: "button",
  caption: "caption",
  cell: "cell",
  checkbox: "checkbox",
  code: "code",
  columnheader: "columnheader",
  combobox: "combobox",
  command: "command",
  complementary: "complementary",
  composite: "composite",
  contentinfo: "contentinfo",
  definition: "definition",
  deletion: "deletion",
  dialog: "dialog",
  directory: "directory",
  document: "document",
  emphasis: "emphasis",
  feed: "feed",
  figure: "figure",
  form: "form",
  generic: "generic",
  grid: "grid",
  gridcell: "gridcell",
  group: "group",
  heading: "heading",
  img: "img",
  input: "input", // ✅
  insertion: "insertion",
  landmark: "landmark",
  link: "link",
  list: "list",
  listbox: "listbox",
  listitem: "listitem",
  log: "log",
  main: "main",
  marquee: "marquee",
  math: "math",
  meter: "meter",
  menu: "menu",
  menubar: "menubar",
  menuitem: "menuitem",
  menuitemcheckbox: "menuitemcheckbox",
  menuitemradio: "menuitemradio",
  navigation: "navigation",
  none: "none",
  note: "note",
  option: "option",
  paragraph: "paragraph",
  presentation: "presentation",
  progressbar: "progressbar",
  radio: "radio",
  radiogroup: "radiogroup",
  range: "range",
  region: "region",
  roletype: "roletype",
  row: "row",
  rowgroup: "rowgroup",
  rowheader: "rowheader",
  scrollbar: "scrollbar",
  search: "search",
  searchbox: "searchbox",
  section: "section",
  sectionhead: "sectionhead",
  select: "select",
  separator: "separator",
  slider: "slider",
  spinbutton: "spinbutton",
  status: "status",
  strong: "strong",
  structure: "structure",
  subscript: "subscript",
  superscript: "superscript",
  switch: "switch",
  tab: "tab",
  table: "table",
  tablist: "tablist",
  tabpanel: "tabpanel",
  term: "term",
  textbox: "textbox",
  time: "time",
  timer: "timer",
  toolbar: "toolbar",
  tooltip: "tooltip",
  tree: "tree",
  treegrid: "treegrid",
  treeitem: "treeitem",
  widget: "widget",
  window: "window",
};

// attribute definitions from https://www.w3.org/TR/wai-aria-1.2/#state_prop_taxonomy

const WIDGET_ARIA_ATTRIBUTES = {
  "aria-autocomplete": "aria-autocomplete",
  "aria-checked": "aria-checked",
  "aria-disabled": "aria-disabled",
  "aria-errormessage": "aria-errormessage",
  "aria-expanded": "aria-expanded",
  "aria-haspopup": "aria-haspopup",
  "aria-hidden": "aria-hidden",
  "aria-invalid": "aria-invalid",
  "aria-label": "aria-label",
  "aria-level": "aria-level",
  "aria-modal": "aria-modal",
  "aria-multiline": "aria-multiline",
  "aria-multiselectable": "aria-multiselectable",
  "aria-orientation": "aria-orientation",
  "aria-placeholder": "aria-placeholder",
  "aria-pressed": "aria-pressed",
  "aria-readonly": "aria-readonly",
  "aria-required": "aria-required",
  "aria-selected": "aria-selected",
  "aria-sort": "aria-sort",
  "aria-valuemax": "aria-valuemax",
  "aria-valuemin": "aria-valuemin",
  "aria-valuenow": "aria-valuenow",
  "aria-valuetext": "aria-valuetext",
};
const WIDGET_ARIA_ATTRIBUTES_LIST = Object.keys(WIDGET_ARIA_ATTRIBUTES);

const LIVE_REGION_ATTRIBUTES = {
  "aria-atomic": "aria-atomic",
  "aria-busy": "aria-busy",
  "aria-live": "aria-live",
  "aria-relevant": "aria-relevant",
};
const LIVE_REGION_ATTRIBUTES_LIST = Object.keys(LIVE_REGION_ATTRIBUTES);


const DRAG_AND_DROP_ATTRIBUTES = {
  "aria-dropeffect": "aria-dropeffect",
  "aria-grabbed": "aria-grabbed",
};
const DRAG_AND_DROP_ATTRIBUTES_LIST = Object.keys(DRAG_AND_DROP_ATTRIBUTES);

const RELATIONSHIP_ATTRIBUTES = {
  "aria-activedescendant": "aria-activedescendant",
  "aria-colcount": "aria-colcount",
  "aria-colindex": "aria-colindex",
  "aria-colspan": "aria-colspan",
  "aria-controls": "aria-controls",
  "aria-describedby": "aria-describedby",
  "aria-details": "aria-details",
  "aria-errormessage": "aria-errormessage",
  "aria-flowto": "aria-flowto",
  "aria-labelledby": "aria-labelledby",
  "aria-owns": "aria-owns",
  "aria-posinset": "aria-posinset",
  "aria-rowcount": "aria-rowcount",
  "aria-rowindex": "aria-rowindex",
  "aria-rowspan": "aria-rowspan",
  "aria-setsize": "aria-setsize",
};
const RELATIONSHIP_ATTRIBUTES_LIST = Object.keys(RELATIONSHIP_ATTRIBUTES);

const ARIA_ATTRIBUTE_SUPPORT_BY_ROLE = {
  [ARIA_ROLES.alert]: [
    "aria-atomic",
    "aria-busy",
    "aria-controls",
    "aria-current",
    "aria-describedby",
    "aria-details",
    "aria-disabled", // (deprecated on this role in ARIA 1.2)
    "aria-dropeffect",
    "aria-errormessage", // (deprecated on this role in ARIA 1.2)
    "aria-flowto",
    "aria-grabbed",
    "aria-haspopup", // (deprecated on this role in ARIA 1.2)
    "aria-hidden",
    "aria-invalid", // (deprecated on this role in ARIA 1.2)
    "aria-keyshortcuts",
    "aria-label",
    "aria-labelledby",
    "aria-live",
    "aria-owns",
    "aria-relevant",
    "aria-roledescription",
  ],
  [ARIA_ROLES.alertdialog]: [
    "aria-atomic",
    "aria-busy",
    "aria-controls",
    "aria-current",
    "aria-describedby",
    "aria-details",
    "aria-disabled", // (deprecated on this role in ARIA 1.2)
    "aria-dropeffect",
    "aria-errormessage", // (deprecated on this role in ARIA 1.2)
    "aria-flowto",
    "aria-grabbed",
    "aria-haspopup", // (deprecated on this role in ARIA 1.2)
    "aria-hidden",
    "aria-invalid", // (deprecated on this role in ARIA 1.2)
    "aria-keyshortcuts",
    "aria-label",
    "aria-labelledby",
    "aria-live",
    "aria-owns",
    "aria-relevant",
    "aria-roledescription",
  ],
  [ARIA_ROLES.input]: [
    "aria-atomic",
    "aria-busy ",
    "aria-controls",
    "aria-current ",
    "aria-describedby",
    "aria-details",
    "aria-disabled ",
    "aria-dropeffect",
    "aria-errormessage",
    "aria-flowto",
    "aria-grabbed ",
    "aria-haspopup",
    "aria-hidden ",
    "aria-invalid ",
    "aria-keyshortcuts",
    "aria-label",
    "aria-labelledby",
    "aria-live",
    "aria-owns",
    "aria-relevant",
    "aria-roledescription",
  ],
};

export const getSupportedAriaAttributes = (ariaRole) => {
  const supportedAriaAttributes = ARIA_ATTRIBUTE_SUPPORT_BY_ROLE[ariaRole];

  return supportedAriaAttributes ?? [];
};
